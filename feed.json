{"title":"神经漫游者","description":"擅长各项后端技能，研究移动端开发与后端性能。此为博客一枚。","language":"","link":"//aha.me","pubDate":"Mon, 31 Aug 2020 14:56:18 GMT","lastBuildDate":"Mon, 31 Aug 2020 15:22:46 GMT","generator":"hexo-generator-json-feed","webMaster":"Kaleldo","items":[{"title":"数据链路层","link":"//aha.me/2020/08/31/数据链路层/","description":"概念：在物理层提供比特传输服务的基础上，在通信的实体之间建立数据链路连接。传送以帧为单位的数据，采用差错控制、流量控制方法、使有差错的物理线路变成无差错的数据链路。","pubDate":"Mon, 31 Aug 2020 14:56:18 GMT","guid":"//aha.me/2020/08/31/数据链路层/","category":"数据链路层"},{"title":"网络层","link":"//aha.me/2020/08/31/网络层/","description":"物理层的主要功能是利用物理传输介质为数据链路层提供物理连接，以便透明传送比特流。","pubDate":"Mon, 31 Aug 2020 14:19:01 GMT","guid":"//aha.me/2020/08/31/网络层/","category":"网络层"},{"title":"java将秒值转换为日期格式，或转为日时分秒","link":"//aha.me/2020/06/08/java将秒值转换为日期格式，或转为日时分秒/","description":"最近对接直播项目,返回的在线观看人数和详细信息,但是时间是以秒为单位的,简直致命.所以这里记录先解决方法","pubDate":"Mon, 08 Jun 2020 09:27:25 GMT","guid":"//aha.me/2020/06/08/java将秒值转换为日期格式，或转为日时分秒/","category":"项目小结"},{"title":"docker常用脚本","link":"//aha.me/2020/06/01/docker常用脚本/","description":"Reids","pubDate":"Mon, 01 Jun 2020 02:49:30 GMT","guid":"//aha.me/2020/06/01/docker常用脚本/","category":"项目小结"},{"title":"使用vue-video-player做H5直播播放","link":"//aha.me/2020/06/01/使用vue-video-player做H5直播播放/","description":"例子 先下载video 插件 npm install vue-video-player –save","pubDate":"Mon, 01 Jun 2020 02:48:17 GMT","guid":"//aha.me/2020/06/01/使用vue-video-player做H5直播播放/","category":"直播,vue"},{"title":"花里胡哨的Java序列化机制","link":"//aha.me/2020/04/07/花里胡哨的Java序列化机制/","description":"前言 通常在写实体类时都默认继承Serializable接口,但是有什么用?今天就来深入了解下java序列化机制 序列化、反序列化的概念 序列化就是将java对象转化成二进制保存到磁盘中去，反序列化就是从磁盘中读取文件流然后转成java对象","pubDate":"Tue, 07 Apr 2020 08:00:36 GMT","guid":"//aha.me/2020/04/07/花里胡哨的Java序列化机制/","category":"Java序列化"},{"title":"JUC之花里胡哨Exchanger","link":"//aha.me/2020/03/26/JUC之花里胡哨Exchanger/","description":"前言JUC中的Exchanger允许成对的线程在指定的同步点上通过exchange方法来交换数据。如果第一个线程先执行exchange方法，它会一直等待第二个线程也 执行exchange方法，当两个线程都到达同步点时，这两个线程就可以交换数据，将当前线程生产 出来的数据传递给对方。","pubDate":"Thu, 26 Mar 2020 02:41:36 GMT","guid":"//aha.me/2020/03/26/JUC之花里胡哨Exchanger/","category":"Java多线程"},{"title":"JUC之花里胡哨CyclicBarrier","link":"//aha.me/2020/03/25/JUC之花里胡哨CyclicBarrier/","description":"前言CyclicBarrier的字面意思是可循环使用（Cyclic）的屏障（Barrier）。它要做的事情是，让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续运行。CyclicBarrier默认的构造方法是CyclicBarrier(int parties)，其参数表示屏障拦截的线程数量，每个线程调用await方法告诉CyclicBarrier我已经到达了屏障，然后当前线程被阻塞。 示例需求:由于”开黑三排””时,老是人凑不齐,因此用CyclicBarrier来演示","pubDate":"Wed, 25 Mar 2020 02:58:41 GMT","guid":"//aha.me/2020/03/25/JUC之花里胡哨CyclicBarrier/","category":"多线程"},{"title":"JUC之花里胡哨CountDownLatch","link":"//aha.me/2020/03/24/JUC之花里胡哨CountDownLatch/","description":"前言 CountDownLatch允许一个或多个线程等待其他线程完成操作。定义CountDownLatch的时候，需要传入一个正数来初始化计数器（虽然传入0也可以，但这样的话CountDownLatch没什么实际意义）。其countDown方法用于递减计数器，await方法会使当前线程阻塞，直到计数器递减为0。所以CountDownLatch常用于多个线程之间的协调工作。 示例假设我们现在有这样一个需求：由于很多群友在技术群搞黄色🍋,群主想了个办法 发布假资源,吸引🍋党的注意 统计名单 踢出群聊","pubDate":"Tue, 24 Mar 2020 04:33:21 GMT","guid":"//aha.me/2020/03/24/JUC之花里胡哨CountDownLatch/","category":"多线程"},{"title":"Java花里胡哨的内存模型","link":"//aha.me/2020/03/24/Java花里胡哨的内存模型/","description":"前言 由于Java内存模型，是(JVM内存结构、Java内存模型以及Java对象模型)知识点当中最晦涩难懂的一个，而且涉及到很多背景知识和相关知识。在《深入理解Java虚拟机》和《Java并发编程的艺术》等书中也都有关于这个知识点的介绍。但是，自己读完之后还是搞不清楚。就来整体的介绍一下Java内存模型","pubDate":"Tue, 24 Mar 2020 01:58:49 GMT","guid":"//aha.me/2020/03/24/Java花里胡哨的内存模型/","category":"内存模型"},{"title":"SpringCloudDemo使用说明","link":"//aha.me/2020/03/12/SpringCloudDemo使用说明/","description":"简介： 基于SpringCloud(Greenwich.SR1) + SpringBoot(2.1.6.RELEASE)的微服务脚手架，具备用户管理、资源权限管理、网关统一鉴权、自动代码生成、等多个模块，支持多业务系统并行开发，支持多服务并行开发，可以作为后端服务的开发脚手架。代码简洁，架构清晰。核心技术采用Eureka、Fegin、Ribbon、Zuul、Hystrix、Sentinel、Spring、SpringSecurity、Mybatis、SpringBoot、Redis等主要框架和中间件。","pubDate":"Thu, 12 Mar 2020 01:57:55 GMT","guid":"//aha.me/2020/03/12/SpringCloudDemo使用说明/","category":"springCloud,微服务"},{"title":"IDEA简单将hexo打包为可运行镜像","link":"//aha.me/2020/03/06/IDEA简单将hexo打包为可运行镜像/","description":"由于GitHub在国内访问时，速度感人，所以放在GitHub上的hexo改放在服务器，但又不想花时间在搭建环境上，因此有了这篇花里胡哨的文章了。 idea安装docker插件可参考上篇文章IDEA中花里胡哨地使用Docker","pubDate":"Fri, 06 Mar 2020 01:55:11 GMT","guid":"//aha.me/2020/03/06/IDEA简单将hexo打包为可运行镜像/","category":"项目小结"},{"title":"Mysql常用命令","link":"//aha.me/2020/02/25/Mysql常用命令/","description":"Mysql常用命令数据定义语句(DDL)数据库操作 登录数据库：mysql -uroot -proot 创建数据库：create database test 查看所有数据库：show databases 使用数据库：use test 查看所有数据表：show tables 删除数据库：drop database test 表操作","pubDate":"Tue, 25 Feb 2020 09:47:56 GMT","guid":"//aha.me/2020/02/25/Mysql常用命令/","category":"项目小结"},{"title":"Linux常用命令","link":"//aha.me/2020/02/25/Linux常用命令/","description":"Linux常用命令系统服务管理systemctl 启动服务：systemctl start httpd.service 关闭服务：systemctl stop httpd.service 重启服务（不管是否在运行）：systemctl restart httpd.service 重新载入配置（不中断服务）：systemctl reload httpd.service 查看运行状态：systemctl status httpd.service 设置开机启动：systemctl enable httpd.service 禁止开机启动：systemctl disable httpd.service 查看系统安装的服务：systemctl list-units –type=service","pubDate":"Tue, 25 Feb 2020 09:47:05 GMT","guid":"//aha.me/2020/02/25/Linux常用命令/","category":"项目小结"},{"title":"Docker入门手册","link":"//aha.me/2020/02/25/Docker入门手册/","description":"Docker入门手册Docker 镜像常用命令搜索镜像1docker search java 下载镜像12- docker pull java:8- docker pull macro/eureka-server:0.0.1","pubDate":"Tue, 25 Feb 2020 09:46:02 GMT","guid":"//aha.me/2020/02/25/Docker入门手册/","category":"项目小结"},{"title":"IDEA花里胡哨地安全连接到Docker(CA认证方式防止挖矿程序xmrig入侵)","link":"//aha.me/2019/12/29/IDEA花里胡哨地安全连接到Docker-CA认证方式防止挖矿程序xmrig入侵/","description":"在上一篇文章(IDEA中花里胡哨地使用Docker)中使用的是适合内网的方式让IDEA操作docker,嗯.然后如果想让暴露在外网的docker.如何被idea安全连接呢?如何避免被植入矿机?如:xmrig.看来又是篇花里胡哨的文章了","pubDate":"Sun, 29 Dec 2019 14:16:00 GMT","guid":"//aha.me/2019/12/29/IDEA花里胡哨地安全连接到Docker-CA认证方式防止挖矿程序xmrig入侵/","category":"docker"},{"title":"vue基础","link":"//aha.me/2019/12/27/vue基础/","description":"监听事件HTML123&lt;div id=\"vue\"&gt; &lt;button v-on:click=\"sayHi\"&gt;点我&lt;/button&gt;&lt;/div&gt; 也可以这样","pubDate":"Fri, 27 Dec 2019 07:21:22 GMT","guid":"//aha.me/2019/12/27/vue基础/","category":"项目小结"},{"title":"JSON.stringify()和JSON.parse()的作用","link":"//aha.me/2019/12/27/JSON-stringify-和JSON-parse-的作用/","description":"(1)JSON.stringify() 从一个对象中解析出字符串 JSON.stringify({“a”:”1”,”b”:”2”})","pubDate":"Fri, 27 Dec 2019 07:20:16 GMT","guid":"//aha.me/2019/12/27/JSON-stringify-和JSON-parse-的作用/","category":"项目小结"},{"title":"腾讯云通信im服务端花里胡哨实战","link":"//aha.me/2019/12/27/腾讯云通信im服务端花里胡哨实战/","description":"最近因为公司业务需求要接入腾讯云通信的im服务，做完基础版后有点闲暇时间想总结下。动手集成到自己项目的时候需要注意以下几个点：","pubDate":"Fri, 27 Dec 2019 07:18:56 GMT","guid":"//aha.me/2019/12/27/腾讯云通信im服务端花里胡哨实战/","category":"技术总结"},{"title":"花里胡哨操作maven私服","link":"//aha.me/2019/12/27/花里胡哨操作maven私服/","description":"上传maven私服之前我们先，创建个仓库","pubDate":"Fri, 27 Dec 2019 07:17:47 GMT","guid":"//aha.me/2019/12/27/花里胡哨操作maven私服/","category":"技术总结"},{"title":"Spring 花里胡哨的@Import用法","link":"//aha.me/2019/12/27/Spring-花里胡哨的-Import用法/","description":"@Import@Import 注解支持导入普通 java 类，并将其声明成一个bean。主要用于将多个分散的 java config 配置类融合成一个更大的 config 类。 @Import 注解在 4.2 之前只支持导入配置类。 在4.2之后 @Import 注解支持导入普通的 java 类,并将其声明成一个 bean。","pubDate":"Fri, 27 Dec 2019 06:38:15 GMT","guid":"//aha.me/2019/12/27/Spring-花里胡哨的-Import用法/","category":"技术总结"},{"title":"spring boot 花里胡哨的热部署(DevTools)","link":"//aha.me/2019/12/27/spring-boot-花里胡哨的热部署-DevTools/","description":"平日里开发项目中，修改了Java代码或者配置文件的时候，必须手动重启项目才能生效。所谓的热部署就是在你修改了后端代码后不需要手动重启，工具会帮你快速的自动重启是修改生效。原理就是重启项目，但比手动重启快多了,其深层原理是使用了两个ClassLoader，一个Classloader加载那些不会改变的类（第三方Jar包），另一个ClassLoader加载会更改的类，称为restartClassLoader，这样在有代码更改的时候，原来的restart ClassLoader 被丢弃，重新创建一个restartClassLoader，由于需要加载的类相比较少，所以实现了较快的重启时间。灵感来源于1948","pubDate":"Fri, 27 Dec 2019 06:37:03 GMT","guid":"//aha.me/2019/12/27/spring-boot-花里胡哨的热部署-DevTools/","category":"直播项目技术总结"},{"title":"Centos7部署yapi","link":"//aha.me/2019/12/27/Centos7部署yapi/","description":"@TOC 生产环境 mongodb node pm2 yapi mongodb安装步骤","pubDate":"Fri, 27 Dec 2019 06:35:02 GMT","guid":"//aha.me/2019/12/27/Centos7部署yapi/","category":"项目技术总结"},{"title":"maven私服,花里胡哨的搭建","link":"//aha.me/2019/12/27/maven私服-花里胡哨的搭建/","description":"为何用到Maven私服？ 在实际开发中，项目中可能会用到第三方的jar、内部通讯的服务接口都会打入到公司的私服中。 我们从项目实际开发来看： 一些无法从外部仓库下载的构件，例如内部的项目还能部署到私服上，以便供其他依赖项目使用。 为了节省带宽和时间，在局域网内架设一个私有的仓库服务器，用其代理所有外部的远程仓库。当本地Maven项目需要下载构件时，先去私服请求，如果私服没有，则再去远程仓库请求，从远程仓库下载构件后，把构件缓存在私服上。这样，及时暂时没有Internet链接，由于私服已经缓存了大量构件，整个项目还是可以正常使用的。同时，也降低了中央仓库的符合。","pubDate":"Fri, 27 Dec 2019 06:33:54 GMT","guid":"//aha.me/2019/12/27/maven私服-花里胡哨的搭建/","category":"直播项目技术总结"},{"title":"IDEA中花里胡哨地使用Docker","link":"//aha.me/2019/12/27/IDEA中花里胡哨地使用Docker/","description":"Docker开启远程访问假如我在腾讯云租了个便宜CentOS虚拟机且安装好了Docker，我们可以修改Docker的配置，开启远程访问权限：","pubDate":"Fri, 27 Dec 2019 06:32:24 GMT","guid":"//aha.me/2019/12/27/IDEA中花里胡哨地使用Docker/","category":"直播项目技术总结"}]}